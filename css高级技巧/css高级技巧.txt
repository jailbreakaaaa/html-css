精灵图：为什么需要精灵图（sprites）？为了有效减少服务器接收和发送请求的次数，提高页面的加载速度。
		        核心原理：将网页中的一些小背景图像整合到一张大图中，这样服务器只需要一次请求就可以了。
		        使用精灵图核心：主要针对小的背景图片使用；
		                                  一般情况下精灵图都是负值，往上往左是负值；
	              			移动背景图片位置，此时可以使用background-position；
				需要精确测量；
字体图标：主要用于显示网页中通用的、常用的一些小图标（展示的是一个图标，实际是一个字体）
		1.字体图标的下载（icomoo.io）(www.iconfont.cn)
		2.字体图标的引入
		3.字体图标的追加：将压缩包中的selection.json重新上传，然后选中自己想要的新的图标，重新下载压缩包，		并替换原来的文件即可。（原来的字体图标不够用）
CSS三角：见代码
CSS界面用户样式：就是更改一些用户操作样式，用来提高更好的用户体验
		1.cursor：default（默认样式）；pointer（小手样式）；move（十字架样式）；text（文字样式）；not-			allowed（禁止样式）
		2.轮廓线（表单）文本框（outline:none；）文本域（resize：none；）（textarea最好放在一行上写，不放			在同一行会有空格）
vertical-line属性应用：（top；middle；baseline（默认为基线对齐）；bottom）（行内元素或行内块元素）
		解决图片底端空白空隙（1.因为默认为基线对齐，改为其他对齐就可以；2.将元素转换为块级元素）
溢出的文字用省略号代替
		1.单行文本溢出显示省略号-三个条件
			1.强制一行内显示文本：white-space：nowrap（默认normal自动换行）
			2.超出部分隐藏：overflow：hidden
			3.文字用省略号代替超出部分text-overflow：ellipsis
		2.多行文本溢出显示省略号（适用于webKit浏览器或移动端）（让后台来写）
			1.overflow：hidden
			2.text-overflow：ellipsis
			3.弹性伸缩盒子模型显示：display：-webkit-box；
			4.限制在一个块元素显示的文本的行数：-webkit-line-clamp：2；
			5.设置或检索伸缩盒对象的子元素的排列方式：-webkit-box-orient：vertical
常见布局技巧
	1.margin负值巧妙运用：1.减少盒子边框叠加的厚度（让每个盒子margin往左移动-1px正好压住相邻盒子边框）
			2.鼠标经过某个盒子的时候，提高当前盒子的层级即可（如果没有定位，则加相对定位（保留位置			）。如果有位置，则加z-index）
	2.文字围绕浮动元素：巧妙运用浮动元素不会压到文字的特点
	3.行内块元素巧妙运用：制作页码导航
	4.CSS三角强化：直角三角形的制作：左下边框或右上边框（上边框宽度要大，右边框宽度稍小）

